<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Cara Yijin Zou</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Cara Yijin Zou</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 12 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SDS348 Python</title>
      <link>/blog/new-post/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/new-post/</guid>
      <description> In addition to R, Python is a valuable tool that can be applied to biology. For example, k-mers are useful in genetics and can be used for a variety of reasons such as sequence assembly, taxonomy, manipulating protein expression, etc. Below is a function that is able to find 3-mers in a sequence and record the frequency number in a dictionary.
# Find all 3-mers in these two sequences my_seq1 = &amp;quot;ATCATCATG&amp;quot; my_seq2 = &amp;quot;CAGCCCAATCAGGCTCTACTGCCACTAAACTTACGCAGGATATATTTACGCCGACGTACT&amp;quot; def findThreemers(seq): dict1={} a = 0 b= 3 three_mer= seq[a:b] while len(three_mer)==3: if three_mer in dict1: dict1[three_mer]+= 1 else: dict1[three_mer]= 1 a+=1 b+=1 three_mer= seq[a:b] print (dict1) def main(): print(&amp;quot;In the first sequence, the 3-mers are :&amp;quot;) findThreemers(my_seq1) print (&amp;quot; In the second sequence, the 3-mers are: &amp;quot;) findThreemers(my_seq2) main() ## In the first sequence, the 3-mers are : ## {&amp;#39;ATC&amp;#39;: 2, &amp;#39;TCA&amp;#39;: 2, &amp;#39;CAT&amp;#39;: 2, &amp;#39;ATG&amp;#39;: 1} ## In the second sequence, the 3-mers are: ## {&amp;#39;CAG&amp;#39;: 3, &amp;#39;AGC&amp;#39;: 1, &amp;#39;GCC&amp;#39;: 3, &amp;#39;CCC&amp;#39;: 1, &amp;#39;CCA&amp;#39;: 2, &amp;#39;CAA&amp;#39;: 1, &amp;#39;AAT&amp;#39;: 1, &amp;#39;ATC&amp;#39;: 1, &amp;#39;TCA&amp;#39;: 1, &amp;#39;AGG&amp;#39;: 2, &amp;#39;GGC&amp;#39;: 1, &amp;#39;GCT&amp;#39;: 1, &amp;#39;CTC&amp;#39;: 1, &amp;#39;TCT&amp;#39;: 1, &amp;#39;CTA&amp;#39;: 2, &amp;#39;TAC&amp;#39;: 4, &amp;#39;ACT&amp;#39;: 4, &amp;#39;CTG&amp;#39;: 1, &amp;#39;TGC&amp;#39;: 1, &amp;#39;CAC&amp;#39;: 1, &amp;#39;TAA&amp;#39;: 1, &amp;#39;AAA&amp;#39;: 1, &amp;#39;AAC&amp;#39;: 1, &amp;#39;CTT&amp;#39;: 1, &amp;#39;TTA&amp;#39;: 2, &amp;#39;ACG&amp;#39;: 3, &amp;#39;CGC&amp;#39;: 2, &amp;#39;GCA&amp;#39;: 1, &amp;#39;GGA&amp;#39;: 1, &amp;#39;GAT&amp;#39;: 1, &amp;#39;ATA&amp;#39;: 2, &amp;#39;TAT&amp;#39;: 2, &amp;#39;ATT&amp;#39;: 1, &amp;#39;TTT&amp;#39;: 1, &amp;#39;CCG&amp;#39;: 1, &amp;#39;CGA&amp;#39;: 1, &amp;#39;GAC&amp;#39;: 1, &amp;#39;CGT&amp;#39;: 1, &amp;#39;GTA&amp;#39;: 1} </description>
    </item>
    
  </channel>
</rss>